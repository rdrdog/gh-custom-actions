name: "Initialises pipeline state"
description: "Reads state from git, and sets up env vars"

inputs:
  main_branch_name:
    description: "Name of the main branch. Defaults to 'main'."
    required: false
    default: main

runs:
  using: 'node16'
  main: 'index.js'

# runs:
#   using: "composite"
#   steps:

#   - name: Set git state as env vars
#     id: gitstate
#     shell: bash
#     run: |
#       touch manifest_git_state
#       mkdir manifest_images
#       touch manifest_images/.keep

#       commitSha=$(git rev-parse HEAD)
#       echo "GIT_COMMIT_SHA=$commitSha" >> manifest_git_state

#       # Get branch name
#       branchName=$GITHUB_HEAD_REF
#       if [[ "$branchName" == "" ]]; then
#         branchName=${GITHUB_REF#refs/heads/}
#       fi
#       echo "GIT_BRANCH_NAME=$branchName" >> manifest_git_state

#       # Get main branch fork point
#       if [[ "$ACT" == "true" ]]; then
#         mainBranchPath=${{ inputs.main_branch_name }}
#       else
#         mainBranchPath=remotes/origin/${{ inputs.main_branch_name }}
#       fi
#       mainBranchForkPoint=$(git merge-base --octopus $mainBranchPath HEAD)
#       echo "GIT_MAIN_BRANCH_FORK_POINT=$mainBranchForkPoint" >> manifest_git_state

#       # Get changes on this branch:
#       if [[ "$commitSha" != "" && "$mainBranchForkPoint" != "" ]]; then
#         fileChangesInBranch=$(git --no-pager diff --name-only $commitSha:./)
#         echo "GIT_DIFF_LIST=$fileChangesInBranch" >> manifest_git_state
#       fi

#       echo "::group::Git state"
#       echo "Commit sha: $commitSha"
#       echo "Branch name: $branchName"
#       echo "Main branch fork sha: $mainBranchForkPoint"
#       echo "Diff for branch: $fileChangesInBranch"
#       echo "::endgroup::"

#   - uses: actions/upload-artifact@v2
#     with:
#       name: manifest_git_state
#       path: manifest_git_state

#   - uses: actions/upload-artifact@v2
#     with:
#       name: manifest_images
#       path: manifest_images/*
