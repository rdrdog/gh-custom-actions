name: "Initialises pipeline state"
description: "Reads state from git, and sets up env vars"

inputs:
  main_branch_name:
    description: "Name of the main branch. Defaults to 'main'."
    required: false
    default: main

runs:
  using: "composite"
  steps:

  - name: Set git state as env vars
    shell: bash
    run: |
      commitSha=$(git rev-parse HEAD)
      echo "GIT_COMMIT_SHA=$commitSha" >> $GITHUB_ENV

      # Get branch name
      branchName=$GITHUB_HEAD_REF
      if [[ "$branchName" == "" ]]; then
        branchName=${GITHUB_REF#refs/heads/}
      fi

      # Get main branch fork point
      if [[ "$ACT" == "true" ]]; then
        mainBranchPath=${{ inputs.main_branch_name }}
      else
        mainBranchPath=remotes/origin/${{ inputs.main_branch_name }}
      fi
      mainBranchForkPoint=$(git merge-base --octopus $mainBranchPath HEAD)
      echo "GIT_MAIN_BRANCH_FORK_POINT=$mainBranchForkPoint" >> $GITHUB_ENV

      # Get changes on this branch:
      if [[ "$commitSha" != "" && "$mainBranchForkPoint" != "" ]]; then
        fileChangesInBranch=$(git --no-pager diff --name-only $commitSha:./)
        echo "GIT_DIFF_LIST=$fileChangesInBranch" >> $GITHUB_ENV
      fi

      echo "Commit sha: $commitSha"
      echo "Branch name: $branchName"
      echo "Main branch fork sha: $mainBranchForkPoint"
      echo "Diff for branch: $fileChangesInBranch"
